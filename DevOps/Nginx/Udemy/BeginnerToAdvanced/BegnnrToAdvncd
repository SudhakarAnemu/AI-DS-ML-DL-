JS 

1. Installations : ---------------------------------------------------------------------------------------------------------------------------------------------

a. apt-get update
b. apt-get install nginx
c. Verify the version. 
root@workernode1:~# /usr/sbin/nginx -v
nginx version: nginx/1.18.0 (Ubuntu)
d. 
apt install net-tools
e. 
Document - Install Nginx
Approach 1:

yum install nginx
systemctl start nginx
systemctl enable nginx
nginx -V
Approach 2 (Recommended):

Documentation Referred:

https://www.nginx.com/resources/wiki/start/topics/tutorials/install/

yum -y install wget
wget https://nginx.org/packages/centos/8/x86_64/RPMS/nginx-1.20.1-1.el8.ngx.x86_64.rpm
yum install nginx-1.20.1-1.el8.ngx.x86_64.rpm
systemctl start nginx
systemctl enable nginx
nginx -V

-------------------------------------------------------------------------------------------------------- Update the /etc/hosts. 

[root@ip-172-31-39-225 html]# cat -n /etc/hosts
     1  127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4
     2  ::1         localhost6 localhost6.localdomain6
     3
     4  127.0.0.1   jsudha.internal


[root@ip-172-31-39-225 html]# curl http://jsudha.internal
This is Application server
[root@ip-172-31-39-225 html]#



2. -------------------------------------------------------------------------------------------------- Call the webpage 

http://34.132.249.98/sudha.html
http://34.132.249.98/saketh.html

root@workernode1:/var/www/html# cat saketh.html
WelCome Saketh
root@workernode1:/var/www/html# cat sudha.html
JS Sudha
root@workernode1:/var/www/html# pwd
/var/www/html
root@workernode1:/var/www/html#

-------------------------------------------------------------------------------------------------- curl 
root@workernode1:/var/www/html# curl http://34.132.249.98/saketh.html
WelCome Saketh
root@workernode1:/var/www/html#

curl http://34.132.249.98/partial.html --> Gives all numbers

root@workernode1:/var/www/html# curl -I http://34.132.249.98/partial.html -------------------> I : shows the response header. 
HTTP/1.1 200 OK
Server: nginx/1.18.0 (Ubuntu)
Date: Sat, 27 Jul 2024 19:30:24 GMT
Content-Type: text/html
Content-Length: 112
Last-Modified: Sat, 27 Jul 2024 19:29:24 GMT
Connection: keep-alive
ETag: "66a54a94-70"
Accept-Ranges: bytes

root@workernode1:/var/www/html#

root@workernode1:~# curl --header "Range: bytes=0-20" http://34.132.249.98/partial.html
1
2
3
4
5
6
7
8
9
10
root@workernode1:~#





--------------------------------------------------------------------------------------------------
root@workernode1:~# systemctl status nginx
● nginx.service - A high performance web server and a reverse proxy server
     Loaded: loaded (/lib/systemd/system/nginx.service; enabled; vendor preset: enabled)
     Active: active (running) since Sat 2024-07-27 17:58:17 UTC; 2h 54min ago
       Docs: man:nginx(8)
   Main PID: 2333 (nginx)
      Tasks: 3 (limit: 4680)
     Memory: 5.7M
     CGroup: /system.slice/nginx.service
             ├─2333 nginx: master process /usr/sbin/nginx -g daemon on; master_process on;
             ├─2334 nginx: worker process
             └─2335 nginx: worker process

Jul 27 17:58:17 workernode1 systemd[1]: Starting A high performance web server and a reverse proxy server...
Jul 27 17:58:17 workernode1 systemd[1]: Started A high performance web server and a reverse proxy server.
root@workernode1:~#

--------------------------------------------------------------------------------------------------
root@workernode1:/etc/nginx# id www-data
uid=33(www-data) gid=33(www-data) groups=33(www-data)
root@workernode1:/etc/nginx# cat -n nginx.conf | grep user
     1  user www-data;
root@workernode1:/etc/nginx# ps -ef | grep nginx
root        2333       1  0 17:58 ?        00:00:00 nginx: master process /usr/sbin/nginx -g daemon on; master_process                 on;
www-data    2334    2333  0 17:58 ?        00:00:00 nginx: worker process
www-data    2335    2333  0 17:58 ?        00:00:00 nginx: worker process
root        2958    1542  0 21:01 pts/0    00:00:00 grep --color=auto nginx
root@workernode1:/etc/nginx#

--------------------------------------------------------------------------------------------------
Important Note
There is a little difference in the configuration structure between Nginx installed via RPM (from official nginx repos) and Nginx installed from Application Repos that officially are part of RedHat-based systems.
If you want a consistent environment similar to that of our video, we recommend installing Nginx from official Nginx repos.
Here is the command to install Nginx that we use in our videos:
yum -y install wget
wget https://nginx.org/packages/centos/8/x86_64/RPMS/nginx-1.20.1-1.el8.ngx.x86_64.rpm
yum -y install nginx-1.20.1-1.el8.ngx.x86_64.rpm
systemctl start nginx
--------------------------------------------------------------------------------------------------
root@workernode1:/etc/nginx# nginx -t
nginx: the configuration file /etc/nginx/nginx.conf syntax is ok
nginx: configuration file /etc/nginx/nginx.conf test is successful
root@workernode1:/etc/nginx#

-------------------------------------------------------------------------------------------------- Change port from 80 to 8080 
I tried to change the port on below file but there is no change. **** NOT WORKING ****

/etc/nginx/sites-available/default
-------------------------------------------------------------------------------------------------- Reverse proxy : 

AWS - Configurations - Fedora. 

1. dnf update

2. dnf install nginx

systemctl start nginx
systemctl status nginx


3. Check the configuration files. 
[root@ip-172-31-37-195 ~]# nginx -t
nginx: the configuration file /etc/nginx/nginx.conf syntax is ok
nginx: configuration file /etc/nginx/nginx.conf test is successful
[root@ip-172-31-37-195 ~]#

4.  Added below rule to accept 8080 : 
sgr-076b14423956a2447	IPv4	Custom TCP	TCP	8080	0.0.0.0/0

5. Updated configuration file at the server level. 

[root@ip-172-31-37-195 nginx]# diff nginx.conf nginx.conf.07292024
38,39c38,39
<         listen       8080;
<         listen       [::]:8080;
---
>         listen       80;
>         listen       [::]:80;
[root@ip-172-31-37-195 nginx]#

6. Now I am able to access 8080 port - page from above AWS server. 
Solution is adding 8080 port as custom TCP. 

7. 

Servers : 

1. applicationserver : 
2. authentication : 
3. nginxproxy : 

--> Actions on below three servers : 

Servers :  -------------------> Actions 

1. applicationserver :  ---------------------------------------> Created below file under this directory
[root@ip-172-31-39-225 admin]# pwd
/usr/share/nginx/html/admin
[root@ip-172-31-39-225 admin]# cat index.html ---> Content. 
I am from App server and I am under admin file
[root@ip-172-31-39-225 admin]#

2. authentication : 
3. nginxproxy : 
File : /etc/nginx/nginx.conf
Added below lines : 
53          location / {
     54             proxy_pass http://172.31.43.255; #Authentication server
     55          }
     56
     57          location /admin {
     58             proxy_pass http://172.31.39.225; #Application server
     59          }
 
     








-------------------------------------------------------------------------------------------------- Doc of Reverse proxy :  Udemy 
Document - Reverse Proxy Setup
Step 1: Launch 3 Servers
1st - Nginx Reverse Proxy
2nd - Application Server
3rd - Authentication Server

Step 2: Install Nginx using RPM Method
yum -y install wget
wget https://nginx.org/packages/centos/8/x86_64/RPMS/nginx-1.20.1-1.el8.ngx.x86_64.rpm
yum -y install nginx-1.20.1-1.el8.ngx.x86_64.rpm
systemctl start nginx

Step 3: Installing net-tools
yum -y install net-tools
ifconfig

Step 4: Adding contents to html file

Admin Server:

cd /usr/share/nginx/html
echo "This is application server backend" > index.html

Auth Server:

cd /usr/share/nginx/html
mkdir admin
echo "This is auth server file under admin" > index.html

Disable SELinux:

getenforce
setenforce 0

Final Configuration:

cd /etc/nginx/conf.d
nano proxy.conf
server {
    listen       80;
    server_name  localhost;
 
    location / {
        proxy_pass http://10.139.0.3;
    }
 
    location /admin {
        proxy_pass http://139.59.11.125;
      }
}
nginx -t
systemctl restart nginx
-------------------------------------------------------------------------------------------------- X-Real IP. 
3rid server will not get the ip address of the First server. 
Getting, watching ip of first server on 3rd server nothing but a X-Real IP. 

Document - X-Real-IP Configuration
Reverse Proxy Side

nano /etc/nginx/conf.d/proxy.conf

proxy_set_header X-Real-IP $remote_addr; ---> Add this line after proxy_pass. 

Backend Server Side

nano /etc/nginx/nginx.conf

"$http_x_real_ip" --> Add this line at the end of the line : log_format

-------------------------------------------------------------------------------------------------- Proxy host header : 
Install tcpdump and analyze it.

Document - Proxy Host Header Commands
Reverse Proxy Level

proxy_set_header Host $host -----------------------> Add this line after the proxy_pass. 

Backend Server Level

yum -y install tcpdump
tcpdump -A -vvvv -s 9999 -i eth1 port 80 > /tmp/headers


--------------------------------------------------------------------------------------------------  Load balancers. 
Document - Load Balancing Configuration

Create 3 servers and install nginx on all 3 servers.  
1. app01 
2. app02 
3. Loadbalancer

upstream backend {
  server 172.31.47.207;
  server 172.31.41.106;
}
 
server {
    listen       80;
    server_name  localhost;
 
    location / {
        proxy_pass http://backend;
 }
}

--------------------------> Updated at below file with the content on the Loadbalanceer. 

[root@ip-172-31-41-217 nginx]# vi nginx.conf
[root@ip-172-31-41-217 nginx]# diff  nginx.conf nginx.conf.07282024
37,41d36
<     upstream backend {
<        server 172.31.47.207; #private ip of app server 1
<        server 172.31.41.106; #private ip of app server 2
<     }
<
57,60d51
<         }
<
<       location / {
<            proxy_pass http://backend;
[root@ip-172-31-41-217 nginx]# pwd
/etc/nginx
[root@ip-172-31-41-217 nginx]#




--------------------------------------------------------------------------------------------------   Same server : /sudha (diff output)  /saketh (diff output) 
--------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------- Required tasks. 

1. Monitroing. 
2. SSL, cypher handling. 


VIP - One servcie on 81 port  ---> http://localhost/
another service on 82 port.   ---> 






EG1, eg2 ---> http node, http reply 
EG1 - /eg1 
eg2 - /eg2 

---> 

http://ip/cusa/test1   --> 

http://ip/cusa/test2   --> 


----> How can we call MB from nginx. 



--------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------
